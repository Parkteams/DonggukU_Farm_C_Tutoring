#include<iostream>
using namespace std;

//메모리 영역

//스택, 힙, 데이터, 코드

//스택
//크기가 작아(기본값 2mb) 크기를 넘으면 stack overflow
//매개변수, 지역변수
//지역{}을 벗어나면 메모리 해제
//컴파일타임에 크기가 정해짐

//힙
//사용자의 동적할당
//사용자가 직접 메모리 해제
//런타임에 크기가 정해짐

int main()
{
	//동적할당
	//lv(주소를 담을 변수) = rv(할당할 주소값)
	//동적할당 c -> malloc, alloc   c++ -> new
	//new -> 힙에 할당한 주소를 반환

	int* d = new int(6);

	delete d; //할당한메모리 주소로가서 메모리 해제

	d = new int(6); //스택에 포인터는 메모리 유지, 새로운 힙 주소 받기

	//지역변수 배열, 동적배열
	int Size = 100;

	//int Number[Size]; //지역변수 배열(컴파일타임에 크기가 정해짐)
	int* Number = new int[Size]; //동적배열(런타임에 크기가 정해짐)

	Number[0] = 1;
	Number[0] = 2;

	//포인터 왜 쓴다?
	//힙영역에 메모리 쓰고 싶은데 접근하려면 주소로 접근해야하니까

	//힙영역은 왜 쓴다?
	//스택이 너무 작으니까
	//우리가 주로 메모리를 쓰는곳이 힙이 될거니까
	
	//할당후에 해제 안하면 메모리 누수

	delete[] Number;
}