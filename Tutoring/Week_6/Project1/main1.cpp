#include<iostream>
using namespace std;

//포인터
//메모리 주소(16진수)를 담는 자료형

//레퍼런스
//참조

//1. 자료형으로 쓰일때(포인터 자료형, 레퍼런스 자료형)

//포인터 크기: 4byte
//레퍼런스 크기: x

//int* a;
//int* ->포인터 자료형
//a를 포인터 변수

//int& b = c; 크기가 없기떄문에 바로 c라는 자리가 필요
//int& ->레퍼런스 자료형
//b: 레퍼런스 변수(c 주소의 별명)

//2. 연산자로 쓰일때(포인터 연산자, 레퍼런스 연산자)

//포인터 연산자: 주소가 가리키고 있는 값
//레퍼런스 연산자: 해당값의 주소

int main()
{
	int c = 2;
	int* a; //포인터 '자료형' 변수 선언
	a = &c; //레퍼런스 연산자 사용

	cout << &c << endl;
	cout << *a << endl; //포인터 연산자 사용
	cout << a << endl;

	int& b = c; //레퍼런스 '자료형' 변수 선언

	cout << b << endl;
	cout << &b << endl;

	//심화

	int** d; //더블포인터
	//포인터변수의 주소를 담으려고 씁니다
	d = &a;

	cout << d << endl;		//a의 주소
	cout << &d << endl;		//d의 주소
	cout << *d << endl;		//a의 값, c 주소
	cout << **d << endl;	//c의 값

	//int&& f;  -> 안됨

	//메모리 주소를 왜 저장을 해야할까?
	//필요해서 힙에 할당한 주소를 불러와야되기 때문에

	return 0;
}